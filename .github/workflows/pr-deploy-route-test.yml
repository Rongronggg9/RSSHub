name: PR route test
# https://github.com/actions/first-interaction/issues/10#issuecomment-670968624
# https://github.com/actions/first-interaction/issues/10#issuecomment-752360668
# Reopen Included
# on:
#   - pull_request_target
on:
  workflow_run:
    workflows:
      - '[docker] CI for build tests'  # Reopen Included
    types:
      - completed

jobs:
  testRoute:
    name: Route test
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # skip if unsuccessful
    steps:
      - uses: actions/checkout@v3
      - name: Fetch Docker image
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: success
          run_id: ${{ github.event.workflow_run.id }}
      - name: Import Docker image
        run: gzip -cvd rsshub.tar.gz | docker load
      - name: Set up Docker container
        run: docker run -d -p 1200:1200 rsshub:latest
      - name: Fetch affected routes
        id: fetchRoute
        uses: actions/github-script@v6
        with:
          # by default, JSON format returned
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.pull_request.body
            const number = context.payload.pull_request.number
            const script = require(`${process.env.GITHUB_WORKSPACE}/scripts/workflow/test-route/identify.js`)
            return await script({github, context, core}, body, number)
      # - name: Waiting for 200 from the Vercel Preview
      #   if: (env.TEST_CONTINUE)
      #   uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
      #   id: waitFor200
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     max_timeout: 300
      - name: Generate feedback
        if: (env.TEST_CONTINUE)
        uses: actions/github-script@v6
        env:
          # TEST_BASEURL: ${{steps.waitFor200.outputs.url}}
          TEST_BASEURL: http://localhost:1200
          TEST_ROUTES: ${{ steps.fetchRoute.outputs.result }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const link = process.env.TEST_BASEURL
            const routes = JSON.parse(process.env.TEST_ROUTES)
            const number = context.payload.pull_request.number
            core.info(`${link}, ${routes}, ${number}`)
            const script = require(`${process.env.GITHUB_WORKSPACE}/scripts/workflow/test-route/test.js`)
            return await script({github, context, core}, link, routes, number)
